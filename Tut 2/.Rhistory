set.seed(19112024)
N <- nrow(minaret)
n <- 1000
srs_sample <- srswor(n = n, N = N)
srs_sample <- getdata(data = minaret, m = srs_sample)
srs_design <- svydesign(ids = ~1, data = srs_sample,
fpc = ~N)
summary(srs_design)
svytotal(x = ~vote, design = srs_design)
sum(minaret$vote)
confint(svytotal(x = ~vote, design = srs_design))
svymean(x = ~vote, design = srs_design)
sum(minaret$vote)/length(minaret$vote)
confint(svymean(x = ~vote, design = srs_design))
svyciprop(formula = ~I(vote==1), design = srs_design)
vote_by_canton <- minaret %>%
group_by(canton_id) %>%
summarise(p_yes=mean(vote),
v_yes=var(vote))
vote_by_canton
H <- length(unique(minaret$canton_id))
H
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
View(str_sample_eqn)
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_eqn)
N_h <- table(minaret$canton_id)
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_eqn)
```{r, message=FALSE}
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_eqn)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sampling)
library(survey)
#setwd('C:/Users/peter/Nextcloud/LEHRE/ISM2324/Tutorial/')
load("minaret.RDa")
head(minaret)
summary(minaret)
minaret <- minaret %>%
mutate(voter_id = seq(1, n(), by = 1), N = n(), H = n_distinct(canton_id), M = n_distinct(mun_id)) %>%
group_by(canton_id) %>%  mutate(N_h = n()) %>% ungroup() %>%
group_by(mun_id) %>%  mutate(N_k = n()) %>% ungroup()
#?srswor
ls("package:survey")
set.seed(19112024)
N <- nrow(minaret)
n <- 1000
srs_sample <- srswor(n = n, N = N)
srs_sample <- getdata(data = minaret, m = srs_sample)
srs_design <- svydesign(ids = ~1, data = srs_sample,
fpc = ~N)
summary(srs_design)
svytotal(x = ~vote, design = srs_design)
sum(minaret$vote)
confint(svytotal(x = ~vote, design = srs_design))
svymean(x = ~vote, design = srs_design)
sum(minaret$vote)/length(minaret$vote)
confint(svymean(x = ~vote, design = srs_design))
svyciprop(formula = ~I(vote==1), design = srs_design)
vote_by_canton <- minaret %>%
group_by(canton_id) %>%
summarise(p_yes=mean(vote),
v_yes=var(vote))
vote_by_canton
H <- length(unique(minaret$canton_id))
H
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_eqn)
svymean(~vote, design = str_design_eqn)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = str_design_eqn)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = str_design_eqn, deff = TRUE)
N_h <- table(minaret$canton_id)
N_h
view(N_h)
p_h <- N_h/unique(minaret$N)
view(p_h)
pi_str_pps <- inclusionprobastrata(minaret$canton_id,n*p_h)
view(pi_str_pps)
pi_str_pps <- inclusionprobastrata(minaret$canton_id,n*p_h)
view(pi_str_pps)
str_sample_pps <- sampling::strata(data = minaret, stratanames = "canton_id",
size = n*p_h, pik = pi_str_pps, method = "systematic")
str_sample_pps <- getdata(data = minaret, m = str_sample_pps)
view(str_sample_pps)
svymean(~vote, design = str_design_pps, deff = TRUE)
str_design_pps <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_pps)
svymean(~vote, design = str_design_pps, deff = TRUE)
svymean(~vote, design = str_design_pps, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sampling)
library(survey)
#setwd('C:/Users/peter/Nextcloud/LEHRE/ISM2324/Tutorial/')
load("minaret.RDa")
head(minaret)
summary(minaret)
minaret <- minaret %>%
mutate(voter_id = seq(1, n(), by = 1), N = n(), H = n_distinct(canton_id), M = n_distinct(mun_id)) %>%
group_by(canton_id) %>%  mutate(N_h = n()) %>% ungroup() %>%
group_by(mun_id) %>%  mutate(N_k = n()) %>% ungroup()
#?srswor
ls("package:survey")
set.seed(19112024)
N <- nrow(minaret)
n <- 1000
srs_sample <- srswor(n = n, N = N)
srs_sample <- getdata(data = minaret, m = srs_sample)
srs_design <- svydesign(ids = ~1, data = srs_sample,
fpc = ~N)
summary(srs_design)
svytotal(x = ~vote, design = srs_design)
sum(minaret$vote)
confint(svytotal(x = ~vote, design = srs_design))
svymean(x = ~vote, design = srs_design)
sum(minaret$vote)/length(minaret$vote)
confint(svymean(x = ~vote, design = srs_design))
svyciprop(formula = ~I(vote==1), design = srs_design)
vote_by_canton <- minaret %>%
group_by(canton_id) %>%
summarise(p_yes=mean(vote),
v_yes=var(vote))
vote_by_canton
H <- length(unique(minaret$canton_id))
H
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_eqn)
svymean(~vote, design = str_design_eqn)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = str_design_eqn, deff = TRUE)
N_h <- table(minaret$canton_id)
view(N_h)
p_h <- N_h/unique(minaret$N)
view(p_h)
pi_str_pps <- inclusionprobastrata(minaret$canton_id,n*p_h)
str_sample_pps <- sampling::strata(data = minaret, stratanames = "canton_id",
size = n*p_h, pik = pi_str_pps, method = "systematic")
str_sample_pps <- getdata(data = minaret, m = str_sample_pps)
view(str_sample_pps)
str_design_pps <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_pps)
svymean(~vote, design = str_design_pps, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
M <- length(unique(minaret$mun_id))
M
m <- 50
M <- length(unique(minaret$mun_id))
cls_sample <- sampling::cluster(data=minaret, clustername="mun_id", size=m, method="srswor")
cls_sample <- getdata(minaret, cls_sample)
cls_sample <- getdata(minaret, cls_sample)
nrow(cls_sample)
View(cls_sample)
cls_design <- svydesign(ids = ~mun_id, data = cls_sample,
fpc = ~M)
summary(cls_design)
svymean(~vote, design = cls_design, deff = TRUE)
knitr::opts_chunk$set(echo = TRUE)
nrow(cls_sample)
deff(phat_cls)
phat_cls <- svymean(~vote, design = cls_design, deff = TRUE)
deff(phat_cls)
svymean(~vote, design = cls_design, deff = TRUE)
nrow(cls_sample)/deff(phat_cls)
nrow(cls_sample)
nrow(cls_sample)/deff(phat_cls)
nrow(cls_sample)
N_k <- table(minaret$mun_id)
str(N_k)
view(N_k)
pi1_tss <- inclusionprobabilities(N_k, m)
view(pi1_tss)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sampling)
library(survey)
#setwd('C:/Users/peter/Nextcloud/LEHRE/ISM2324/Tutorial/')
load("minaret.RDa")
head(minaret)
summary(minaret)
minaret <- minaret %>%
mutate(voter_id = seq(1, n(), by = 1), N = n(), H = n_distinct(canton_id), M = n_distinct(mun_id)) %>%
group_by(canton_id) %>%  mutate(N_h = n()) %>% ungroup() %>%
group_by(mun_id) %>%  mutate(N_k = n()) %>% ungroup()
#?srswor
ls("package:survey")
set.seed(19112024)
N <- nrow(minaret)
n <- 1000
srs_sample <- srswor(n = n, N = N)
srs_sample <- getdata(data = minaret, m = srs_sample)
srs_design <- svydesign(ids = ~1, data = srs_sample,
fpc = ~N)
summary(srs_design)
svytotal(x = ~vote, design = srs_design)
sum(minaret$vote)
confint(svytotal(x = ~vote, design = srs_design))
svymean(x = ~vote, design = srs_design)
sum(minaret$vote)/length(minaret$vote)
confint(svymean(x = ~vote, design = srs_design))
svyciprop(formula = ~I(vote==1), design = srs_design)
vote_by_canton <- minaret %>%
group_by(canton_id) %>%
summarise(p_yes=mean(vote),
v_yes=var(vote))
vote_by_canton
H <- length(unique(minaret$canton_id))
H
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_eqn)
svymean(~vote, design = str_design_eqn)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = str_design_eqn, deff = TRUE)
N_h <- table(minaret$canton_id)
view(N_h)
p_h <- N_h/unique(minaret$N)
view(p_h)
pi_str_pps <- inclusionprobastrata(minaret$canton_id,n*p_h)
str_sample_pps <- sampling::strata(data = minaret, stratanames = "canton_id",
size = n*p_h, pik = pi_str_pps, method = "systematic")
str_sample_pps <- getdata(data = minaret, m = str_sample_pps)
view(str_sample_pps)
str_design_pps <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_pps)
svymean(~vote, design = str_design_pps, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
M <- length(unique(minaret$mun_id))
m <- 50
cls_sample <- sampling::cluster(data=minaret, clustername="mun_id", size=m, method="srswor")
cls_sample <- getdata(minaret, cls_sample)
nrow(cls_sample)
cls_design <- svydesign(ids = ~mun_id, data = cls_sample,
fpc = ~M)
summary(cls_design)
svymean(~vote, design = cls_design, deff = TRUE)
N_k <- table(minaret$mun_id)
head(N_k)
length(unique(minaret$N_k))
tss_sample <- sampling::mstage(data = minaret,
stage = list("cluster", "stratified"),
varnames = list("mun_id", "voter_id"),
size = list(size1 = m, size2 = c(round(rep(n/m, m)))),
method=list("systematic","srswor"),
pik = list(pi1_tss))
pi1_tss <- inclusionprobabilities(N_k, m)
tss_sample <- sampling::mstage(data = minaret,
stage = list("cluster", "stratified"),
varnames = list("mun_id", "voter_id"),
size = list(size1 = m, size2 = c(round(rep(n/m, m)))),
method=list("systematic","srswor"),
pik = list(pi1_tss))
tss_sample <- getdata(data = minaret, m = tss_sample)[[2]]
tss_sample <- tss_sample %>%
mutate(pi1 = inclusionprobabilities(N_k, m), pi2 = n/m/tss_sample$N_k)
View(tss_sample)
tss_design <- svydesign(ids = ~mun_id+voter_id, probs = ~pi1+pi2, pps = 'brewer', data = tss_sample)
summary(tss_design)
svymean(~vote, design = tss_design, deff = TRUE)
svymean(~vote, design = tss_design, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = cls_design, deff = TRUE)
svymean(~vote, design = str_design_eqn, deff = TRUE)
svymean(~vote, design = str_design_pps, deff = TRUE)
svymean(~vote, design = srs_design, deff = TRUE)
rm(list=ls())
load("minaret.RDa")
minaret <- minaret %>%
mutate(voter_id = seq(1, n(), by = 1), N = n(), H = n_distinct(canton_id), M = n_distinct(mun_id)) %>%
group_by(canton_id) %>%  mutate(N_h = n()) %>% ungroup() %>%
group_by(mun_id) %>%  mutate(N_k = n()) %>% ungroup()
View(minaret)
srswor(n = n, N = N)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sampling)
library(survey)
#setwd('C:/Users/peter/Nextcloud/LEHRE/ISM2324/Tutorial/')
load("minaret.RDa")
head(minaret)
summary(minaret)
minaret <- minaret %>%
mutate(voter_id = seq(1, n(), by = 1),
N = n(), H = n_distinct(canton_id),
M = n_distinct(mun_id)) %>%
group_by(canton_id) %>%  mutate(N_h = n()) %>% ungroup() %>%
group_by(mun_id) %>%  mutate(N_k = n()) %>% ungroup()
#?srswor
ls("package:survey")
set.seed(20112024)
N <- nrow(minaret)
n <- 1000
srs_sample <- srswor(n = n, N = N)
srs_sample <- getdata(data = minaret, m = srs_sample)
View(srs_sample)
srs_design <- svydesign(ids = ~1, data = srs_sample, fpc = ~N)
svytotal(x = ~vote, design = srs_design)
sum(minaret$vote)
confint(svytotal(x = ~vote, design = srs_design))
svytotal(x = ~vote, design = srs_design)
svymean(x = ~vote, design = srs_design)
sum(minaret$vote)/length(minaret$vote)
confint(svymean(x = ~vote, design = srs_design))
svyciprop(formula = ~I(vote==1), design = srs_design)
H <- length(unique(minaret$canton_id))
H
1000/26
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
View(str_sample_eqn)
str_sample_eq
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sampling)
library(survey)
#setwd('C:/Users/peter/Nextcloud/LEHRE/ISM2324/Tutorial/')
load("minaret.RDa")
head(minaret)
summary(minaret)
minaret <- minaret %>%
mutate(voter_id = seq(1, n(), by = 1),
N = n(), H = n_distinct(canton_id),
M = n_distinct(mun_id)) %>%
group_by(canton_id) %>%  mutate(N_h = n()) %>% ungroup() %>%
group_by(mun_id) %>%  mutate(N_k = n()) %>% ungroup()
#?srswor
ls("package:survey")
set.seed(20112024)
N <- nrow(minaret)
n <- 1000
srs_sample <- srswor(n = n, N = N)
srs_sample <- getdata(data = minaret, m = srs_sample)
srs_design <- svydesign(ids = ~1, data = srs_sample, fpc = ~N)
summary(srs_design)
svytotal(x = ~vote, design = srs_design)
sum(minaret$vote)
confint(svytotal(x = ~vote, design = srs_design))
svymean(x = ~vote, design = srs_design)
sum(minaret$vote)/length(minaret$vote)
confint(svymean(x = ~vote, design = srs_design))
svyciprop(formula = ~I(vote==1), design = srs_design)
vote_by_canton <- minaret %>%
group_by(canton_id) %>%
summarise(p_yes=mean(vote),
v_yes=var(vote))
vote_by_canton
H <- length(unique(minaret$canton_id))
H
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data =str_sample_eqn)
svymean(~vote, design = str_design_eqn)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = str_design_eqn, deff = TRUE)
N_h <- table(minaret$canton_id)
view(N_h)
p_h <- N_h/unique(minaret$N)
view(p_h)
pi_str_pps <- inclusionprobastrata(minaret$canton_id,n*p_h)
view(pi_str_pps)
view(p_h)
str_sample_pps <- getdata(data = minaret, m = str_sample_pps)
str_sample_pps <- sampling::strata(data = minaret, stratanames = "canton_id",
size = n*p_h, pik = pi_str_pps, method = "systematic")
str_sample_pps <- getdata(data = minaret, m = str_sample_pps)
View(str_sample_pps)
svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_pps)
svymean(~vote, design = str_design_pps, deff = TRUE)
str_design_pps <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_pps)
svymean(~vote, design = str_design_pps, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = str_design_pps, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
M <- length(unique(minaret$mun_id))
M
View(minaret)
unique(minaret$mun_id)
M <- length(unique(minaret$mun_id))
M
cls_sample <- sampling::cluster(data=minaret, clustername="mun_id", size=m, method="srswor")
m <- 50
cls_sample <- sampling::cluster(data=minaret, clustername="mun_id", size=m, method="srswor")
cls_sample <- getdata(minaret, cls_sample)
nrow(cls_sample)
svydesign(ids = ~mun_id, data = cls_sample,
fpc = ~M)
cls_design <- svydesign(ids = ~mun_id, data = cls_sample,
fpc = ~M)
summary(cls_design)
svymean(~vote, design = cls_design, deff = TRUE)
cls_design <- svydesign(ids = ~mun_id, data = cls_sample,
fpc = ~M)
svymean(~vote, design = cls_design, deff = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(sampling)
library(survey)
#setwd('C:/Users/peter/Nextcloud/LEHRE/ISM2324/Tutorial/')
load("minaret.RDa")
head(minaret)
summary(minaret)
minaret <- minaret %>%
mutate(voter_id = seq(1, n(), by = 1),
N = n(), H = n_distinct(canton_id),
M = n_distinct(mun_id)) %>%
group_by(canton_id) %>%  mutate(N_h = n()) %>% ungroup() %>%
group_by(mun_id) %>%  mutate(N_k = n()) %>% ungroup()
#?srswor
ls("package:survey")
set.seed(20112024)
N <- nrow(minaret)
n <- 1000
srs_sample <- srswor(n = n, N = N)
srs_sample <- getdata(data = minaret, m = srs_sample)
srs_design <- svydesign(ids = ~1, data = srs_sample, fpc = ~N)
summary(srs_design)
svytotal(x = ~vote, design = srs_design)
sum(minaret$vote)
confint(svytotal(x = ~vote, design = srs_design))
svymean(x = ~vote, design = srs_design)
sum(minaret$vote)/length(minaret$vote)
confint(svymean(x = ~vote, design = srs_design))
svyciprop(formula = ~I(vote==1), design = srs_design)
vote_by_canton <- minaret %>%
group_by(canton_id) %>%
summarise(p_yes=mean(vote),
v_yes=var(vote))
vote_by_canton
H <- length(unique(minaret$canton_id))
H
str_sample_eqn <- sampling::strata(data = minaret,
stratanames = "canton_id",
size = round(rep(n/H, times = H)), method = "srswor")
str_sample_eqn <- getdata(data = minaret, m = str_sample_eqn)
str_design_eqn <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data =str_sample_eqn)
svymean(~vote, design = str_design_eqn)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = str_design_eqn, deff = TRUE)
N_h <- table(minaret$canton_id)
view(N_h)
p_h <- N_h/unique(minaret$N)
view(p_h)
pi_str_pps <- inclusionprobastrata(minaret$canton_id,n*p_h)
view(pi_str_pps)
str_sample_pps <- sampling::strata(data = minaret, stratanames = "canton_id",
size = n*p_h, pik = pi_str_pps, method = "systematic")
str_sample_pps <- getdata(data = minaret, m = str_sample_pps)
view(str_sample_pps)
str_design_pps <- svydesign(ids = ~1, strata = ~canton_id, fpc = ~N_h, data = str_sample_pps)
svymean(~vote, design = str_design_pps, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
M <- length(unique(minaret$mun_id))
M
m <- 50
cls_sample <- sampling::cluster(data=minaret, clustername="mun_id", size=m, method="srswor")
cls_sample <- getdata(minaret, cls_sample)
nrow(cls_sample)
cls_design <- svydesign(ids = ~mun_id, data = cls_sample,
fpc = ~M)
summary(cls_design)
svymean(~vote, design = cls_design, deff = TRUE)
N_k <- table(minaret$mun_id)
view(N_k)
length(unique(minaret$N_k))
N_k <- table(minaret$mun_id)
pi1_tss <- inclusionprobabilities(N_k, m)
pi1_tss <- inclusionprobabilities(N_k, m)
length(unique(pi1_tss))
tss_sample <- sampling::mstage(data = minaret,
stage = list("cluster","stratified"),
varnames = list("mun_id", "voter_id"),
size = list(size1 = m, size2 = c(round(rep(n/m, m)))),
method=list("systematic","srswor"),
pik = list(pi1_tss))
pi2 = n/m/tss_sample$N_k
View(tss_sample)
tss_sample <- getdata(data = minaret, m = tss_sample)[[2]]
tss_sample <- tss_sample %>%
mutate(pi1 = inclusionprobabilities(N_k, m), pi2 = n/m/tss_sample$N_k)
View(tss_sample)
tss_design <- svydesign(ids = ~mun_id+voter_id, probs = ~pi1+pi2, pps = 'brewer', data = tss_sample)
svymean(~vote, design = tss_design, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = tss_design, deff = TRUE)
sum(minaret$vote)/length(minaret$vote)
svymean(~vote, design = cls_design, deff = TRUE)
svymean(~vote, design = str_design_eqn, deff = TRUE)
svymean(~vote, design = str_design_pps, deff = TRUE)
svymean(~vote, design = srs_design, deff = TRUE)
