knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
pacman::p_load(tidyverse,survey)
load("FPEsurvey.rda")
rm(list=ls())
pacman::p_load(tidyverse,survey)
load("FPEsurvey.rda")
cand_names <- c("Arthaud","Poutou","Melenchon","Hamon","Macron","Fillon","Dupont-Aignon","Le Pen","Cheminade","Asselineau","Lassalle")
age_groups <- c("18-24","25-34","35-44","45-54","55-64","65-74",">75")
resp_data <- resp_data %>%
mutate(choice = factor(choice, levels = seq(1,11,1), labels = cand_names), age = factor(age, levels = seq(1,7,1), labels = age_groups), sex = recode_factor(sex, `1` = "female", `2` = "male")) %>%
mutate_at(vars(Arthaud:Lassalle), ~na_if(., 0)) %>%
filter(!is.na(choice))
multi_design <- svydesign(id = ~id + resp_id, probs = ~first_stage + second_stage, data = resp_data)
cand_totals <- data.frame(choice = cand_names, totals = c(232384,394505,7059951,2291288,8656346,7212995,1695000,7678491,65586,332547,435301))
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
resp_data <- resp_data %>%
mutate(
runoff = case_when(
choice == "Macron" ~ "Macron",
choice == "Le Pen" ~ "Le Pen",
Macron > LePen ~ "Macron",
LePen > Macron ~ "Le Pen",
TRUE ~ NA_character_
)
)
multi_design <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = resp_data)
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
sum(is.na(resp_data$runoff))
sum(is.na(resp_data$runoff))/nrow(resp_data)
pacman::p_load(VIM,mitools,mice)
pacman::p_load(VIM,mitools,mice)
aggr(resp_data[,c(4:17)], prop = FALSE)
predictor_matrix <- matrix(data = c(0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0), nrow = ncol(resp_data), ncol = ncol(resp_data), dimnames = list(colnames(resp_data), colnames(resp_data)),  byrow = TRUE)
predictor_matrix
imps <- mice(resp_data, m=5, method = c("", "", "", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "", "", "", "", "", "", ""), predictorMatrix = predictor_matrix, seed=33)
imp_data <- imputationList(lapply(seq(imps$m), complete, data=imps))
for (i in seq(imps$m)) {
imp_data$imputations[[i]]$runoff <- ifelse  (imp_data$imputations[[i]]$choice=="Macron", 1, ifelse (imp_data$imputations[[i]]$choice=="Le Pen", 2, NA))
imp_data$imputations[[i]]$runoff[!is.na(imp_data$imputations[[i]]$Macron)&!is.na(imp_data$imputations[[i]]$LePen)&imp_data$imputations[[i]]$Macron > imp_data$imputations[[i]]$LePen] <- 1
imp_data$imputations[[i]]$runoff[!is.na(imp_data$imputations[[i]]$Macron)&!is.na(imp_data$imputations[[i]]$LePen)&imp_data$imputations[[i]]$Macron < imp_data$imputations[[i]]$LePen] <- 2
imp_data$imputations[[i]]$runoff <- factor(imp_data$imputations[[i]]$runoff, levels = c(1,2), labels = c("Macron","Le Pen"))
}
imp_designs <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = imp_data)
imp_shares <- with(imp_designs, svymean(~runoff, na.rm = TRUE))
imp_totals <- with(imp_designs, svytotal(~runoff, na.rm = TRUE))
summary(MIcombine(imp_shares))
summary(MIcombine(imp_totals))
imp_post_designs <- list()
imp_post_shares <- list()
imp_post_totals <- list()
for (i in seq(imps$m)) {
imp_post_designs[[i]] <- postStratify(imp_designs$designs[[i]], strata = ~choice, population = cand_totals)
imp_post_shares[[i]] <- svymean(~runoff, imp_post_designs[[i]], na.rm = TRUE)
imp_post_totals[[i]] <- svytotal(~runoff, imp_post_designs[[i]], na.rm = TRUE)
}
summary(MIcombine(imp_post_shares))
summary(MIcombine(imp_post_totals))
hot_data <- hotdeck(data = resp_data, variable = c("Macron", "LePen"), imp_var = TRUE)
View(hot_data)
knitr::opts_chunk$set(echo = TRUE)
hot_data <- hotdeck(data = resp_data, variable = c("Macron", "LePen"), imp_var = TRUE)
rm(list=ls())
pacman::p_load(tidyverse,survey)
load("FPEsurvey.rda")
cand_names <- c("Arthaud","Poutou","Melenchon","Hamon","Macron","Fillon","Dupont-Aignon","Le Pen","Cheminade","Asselineau","Lassalle")
age_groups <- c("18-24","25-34","35-44","45-54","55-64","65-74",">75")
resp_data <- resp_data %>%
mutate(choice = factor(choice, levels = seq(1,11,1), labels = cand_names), age = factor(age, levels = seq(1,7,1), labels = age_groups), sex = recode_factor(sex, `1` = "female", `2` = "male")) %>%
mutate_at(vars(Arthaud:Lassalle), ~na_if(., 0)) %>%
filter(!is.na(choice))
multi_design <- svydesign(id = ~id + resp_id, probs = ~first_stage + second_stage, data = resp_data)
cand_totals <- data.frame(choice = cand_names, totals = c(232384,394505,7059951,2291288,8656346,7212995,1695000,7678491,65586,332547,435301))
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
resp_data <- resp_data %>%
mutate(
runoff = case_when(
choice == "Macron" ~ "Macron",
choice == "Le Pen" ~ "Le Pen",
Macron > LePen ~ "Macron",
LePen > Macron ~ "Le Pen",
TRUE ~ NA_character_
)
)
multi_design <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = resp_data)
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
hot_data <- hotdeck(data = resp_data, variable = c("Macron", "LePen"), imp_var = TRUE)
pacman::p_load(VIM,mitools,mice)
hot_data <- hotdeck(data = resp_data, variable = c("Macron", "LePen"), imp_var = TRUE)
View(hot_data)
hot_data <- hot_data %>%
mutate(
runoff = case_when(
choice == "Macron" ~ "Macron",
choice == "Le Pen" ~ "Le Pen",
Macron > LePen ~ "Macron",
LePen > Macron ~ "Le Pen",
TRUE ~ NA_character_
)
)
hot_design <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = hot_data)
post_hot_design <- postStratify(design = hot_design, strata = ~choice, population = cand_totals)
svymean(~runoff, hot_design, na.rm=T)
svytotal(~runoff, hot_design, na.rm=T)
svymean(~runoff, post_hot_design, na.rm=T)
svytotal(~runoff, post_hot_design, na.rm=T)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
pacman::p_load(tidyverse,survey)
load("FPEsurvey.rda")
cand_names <- c("Arthaud","Poutou","Melenchon","Hamon","Macron","Fillon","Dupont-Aignon","Le Pen","Cheminade","Asselineau","Lassalle")
age_groups <- c("18-24","25-34","35-44","45-54","55-64","65-74",">75")
resp_data <- resp_data %>%
mutate(choice = factor(choice, levels = seq(1,11,1), labels = cand_names), age = factor(age, levels = seq(1,7,1), labels = age_groups), sex = recode_factor(sex, `1` = "female", `2` = "male")) %>%
mutate_at(vars(Arthaud:Lassalle), ~na_if(., 0)) %>%
filter(!is.na(choice))
multi_design <- svydesign(id = ~id + resp_id, probs = ~first_stage + second_stage, data = resp_data)
cand_totals <- data.frame(choice = cand_names, totals = c(232384,394505,7059951,2291288,8656346,7212995,1695000,7678491,65586,332547,435301))
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
resp_data <- resp_data %>%
mutate(
runoff = case_when(
choice == "Macron" ~ "Macron",
choice == "Le Pen" ~ "Le Pen",
Macron > LePen ~ "Macron",
LePen > Macron ~ "Le Pen",
TRUE ~ NA_character_
)
)
multi_design <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = resp_data)
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
sum(is.na(resp_data$runoff))
sum(is.na(resp_data$runoff))/nrow(resp_data)
pacman::p_load(VIM,mitools,mice)
aggr(resp_data[,c(4:17)], prop = FALSE)
predictor_matrix <- matrix(data = c(0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0), nrow = ncol(resp_data), ncol = ncol(resp_data), dimnames = list(colnames(resp_data), colnames(resp_data)),  byrow = TRUE)
predictor_matrix
imps <- mice(resp_data, m=5, method = c("", "", "", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "", "", "", "", "", "", ""), predictorMatrix = predictor_matrix, seed=33)
imp_data <- imputationList(lapply(seq(imps$m), complete, data=imps))
View(imp_data)
imp_data[[0]]
imp_data[1]
for (i in seq(imps$m)) {
imp_data$imputations[[i]]$runoff <- ifelse  (imp_data$imputations[[i]]$choice=="Macron", 1, ifelse (imp_data$imputations[[i]]$choice=="Le Pen", 2, NA))
imp_data$imputations[[i]]$runoff[!is.na(imp_data$imputations[[i]]$Macron)&!is.na(imp_data$imputations[[i]]$LePen)&imp_data$imputations[[i]]$Macron > imp_data$imputations[[i]]$LePen] <- 1
imp_data$imputations[[i]]$runoff[!is.na(imp_data$imputations[[i]]$Macron)&!is.na(imp_data$imputations[[i]]$LePen)&imp_data$imputations[[i]]$Macron < imp_data$imputations[[i]]$LePen] <- 2
imp_data$imputations[[i]]$runoff <- factor(imp_data$imputations[[i]]$runoff, levels = c(1,2), labels = c("Macron","Le Pen"))
}
imp_designs <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = imp_data)
imp_shares <- with(imp_designs, svymean(~runoff, na.rm = TRUE))
imp_totals <- with(imp_designs, svytotal(~runoff, na.rm = TRUE))
summary(MIcombine(imp_shares))
summary(MIcombine(imp_totals))
imp_post_designs <- list()
imp_post_shares <- list()
imp_post_totals <- list()
for (i in seq(imps$m)) {
imp_post_designs[[i]] <- postStratify(imp_designs$designs[[i]], strata = ~choice, population = cand_totals)
imp_post_shares[[i]] <- svymean(~runoff, imp_post_designs[[i]], na.rm = TRUE)
imp_post_totals[[i]] <- svytotal(~runoff, imp_post_designs[[i]], na.rm = TRUE)
}
summary(MIcombine(imp_post_shares))
summary(MIcombine(imp_post_totals))
imp_post_designs <- list()
imp_post_shares <- list()
imp_post_totals <- list()
for (i in seq(imps$m)) {
imp_post_designs[[i]] <- postStratify(imp_designs$designs[[i]], strata = ~choice, population = cand_totals)
imp_post_shares[[i]] <- svymean(~runoff, imp_post_designs[[i]], na.rm = TRUE)
imp_post_totals[[i]] <- svytotal(~runoff, imp_post_designs[[i]], na.rm = TRUE)
}
summary(MIcombine(imp_post_shares))
#summary(MIcombine(imp_post_totals))
imp_post_designs <- list()
imp_post_shares <- list()
imp_post_totals <- list()
for (i in seq(imps$m)) {
imp_post_designs[[i]] <- postStratify(imp_designs$designs[[i]], strata = ~choice, population = cand_totals)
imp_post_shares[[i]] <- svymean(~runoff, imp_post_designs[[i]], na.rm = TRUE)
imp_post_totals[[i]] <- svytotal(~runoff, imp_post_designs[[i]], na.rm = TRUE)
}
summary(MIcombine(imp_post_shares))
summary(MIcombine(imp_post_totals))
hot_data <- hotdeck(data = resp_data, variable = c("Macron", "LePen"), imp_var = TRUE)
View(hot_data)
hot_data <- hot_data %>%
mutate(
runoff = case_when(
choice == "Macron" ~ "Macron",
choice == "Le Pen" ~ "Le Pen",
Macron > LePen ~ "Macron",
LePen > Macron ~ "Le Pen",
TRUE ~ NA_character_
)
)
hot_design <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = hot_data)
post_hot_design <- postStratify(design = hot_design, strata = ~choice, population = cand_totals)
svymean(~runoff, hot_design, na.rm=T)
svytotal(~runoff, hot_design, na.rm=T)
svymean(~runoff, post_hot_design, na.rm=T)
svytotal(~runoff, post_hot_design, na.rm=T)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
pacman::p_load(tidyverse,survey)
load("FPEsurvey.rda")
cand_names <- c("Arthaud","Poutou","Melenchon","Hamon","Macron","Fillon","Dupont-Aignon","Le Pen","Cheminade","Asselineau","Lassalle")
age_groups <- c("18-24","25-34","35-44","45-54","55-64","65-74",">75")
resp_data <- resp_data %>%
mutate(choice = factor(choice, levels = seq(1,11,1), labels = cand_names), age = factor(age, levels = seq(1,7,1), labels = age_groups), sex = recode_factor(sex, `1` = "female", `2` = "male")) %>%
mutate_at(vars(Arthaud:Lassalle), ~na_if(., 0)) %>%
filter(!is.na(choice))
multi_design <- svydesign(id = ~id + resp_id, probs = ~first_stage + second_stage, data = resp_data)
cand_totals <- data.frame(choice = cand_names, totals = c(232384,394505,7059951,2291288,8656346,7212995,1695000,7678491,65586,332547,435301))
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
resp_data <- resp_data %>%
mutate(
runoff = case_when(
choice == "Macron" ~ "Macron",
choice == "Le Pen" ~ "Le Pen",
Macron > LePen ~ "Macron",
LePen > Macron ~ "Le Pen",
TRUE ~ NA_character_
)
)
multi_design <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = resp_data)
post_design <- postStratify(design = multi_design, strata = ~choice, population = cand_totals)
sum(is.na(resp_data$runoff))
sum(is.na(resp_data$runoff))/nrow(resp_data)
pacman::p_load(VIM,mitools,mice)
aggr(resp_data[,c(4:17)], prop = FALSE)
predictor_matrix <- matrix(data = c(0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0), nrow = ncol(resp_data), ncol = ncol(resp_data), dimnames = list(colnames(resp_data), colnames(resp_data)),  byrow = TRUE)
predictor_matrix
imps <- mice(resp_data, m=5, method = c("", "", "", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "norm", "", "", "", "", "", "", ""), predictorMatrix = predictor_matrix, seed=33)
imp_data <- imputationList(lapply(seq(imps$m), complete, data=imps))
imp_data[1]
for (i in seq(imps$m)) {
imp_data$imputations[[i]]$runoff <- ifelse  (imp_data$imputations[[i]]$choice=="Macron", 1, ifelse (imp_data$imputations[[i]]$choice=="Le Pen", 2, NA))
imp_data$imputations[[i]]$runoff[!is.na(imp_data$imputations[[i]]$Macron)&!is.na(imp_data$imputations[[i]]$LePen)&imp_data$imputations[[i]]$Macron > imp_data$imputations[[i]]$LePen] <- 1
imp_data$imputations[[i]]$runoff[!is.na(imp_data$imputations[[i]]$Macron)&!is.na(imp_data$imputations[[i]]$LePen)&imp_data$imputations[[i]]$Macron < imp_data$imputations[[i]]$LePen] <- 2
imp_data$imputations[[i]]$runoff <- factor(imp_data$imputations[[i]]$runoff, levels = c(1,2), labels = c("Macron","Le Pen"))}
imp_designs <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = imp_data)
imp_shares <- with(imp_designs, svymean(~runoff, na.rm = TRUE))
imp_totals <- with(imp_designs, svytotal(~runoff, na.rm = TRUE))
summary(MIcombine(imp_shares))
summary(MIcombine(imp_totals))
imp_post_designs <- list()
imp_post_shares <- list()
imp_post_totals <- list()
for (i in seq(imps$m)) {
imp_post_designs[[i]] <- postStratify(imp_designs$designs[[i]], strata = ~choice, population = cand_totals)
imp_post_shares[[i]] <- svymean(~runoff, imp_post_designs[[i]], na.rm = TRUE)
imp_post_totals[[i]] <- svytotal(~runoff, imp_post_designs[[i]], na.rm = TRUE)}
summary(MIcombine(imp_post_shares))
summary(MIcombine(imp_post_totals))
View(cand_totals)
View(resp_data)
hot_data <- hotdeck(data = resp_data, variable = c("Macron", "LePen"), imp_var = TRUE)
View(hot_data)
hot_data <- hot_data %>%
mutate(
runoff = case_when(
choice == "Macron" ~ "Macron",
choice == "Le Pen" ~ "Le Pen",
Macron > LePen ~ "Macron",
LePen > Macron ~ "Le Pen",
TRUE ~ NA_character_
)
)
hot_design <- svydesign(id = ~id + resp_id, ~first_stage + second_stage, data = hot_data)
post_hot_design <- postStratify(design = hot_design, strata = ~choice, population = cand_totals)
svymean(~runoff, hot_design, na.rm=T)
svytotal(~runoff, hot_design, na.rm=T)
svymean(~runoff, post_hot_design, na.rm=T)
svytotal(~runoff, post_hot_design, na.rm=T)
